#
# WM independant hotkeys
#

# Terminal emulator
super + Return
    $TERM

# Program launcher
super + @space
    rofi -show drun

# Reload sxhkd config
super + alt + Escape
    pkill -USR1 -x sxhkd;\
    dunstify "sxhkd" "Reloaded configuration"

super + slash
    sxhkd-help.sh

# Lock screen
super + l
    xsecurelock

# Powermenu
super + shift + l
    powermenu.sh


# Screenshot
super + {_,shift +}{v,c,x}
    screenshot.sh {--hidecursor, ""} {"", --selectwindow, --select} --compress

#
# Audio
#

# Volume
XF86Audio{Raise,Lower}Volume
    amixer -q set Master 1%{+,-} unmute ;\
    notify-volume.sh


# Mute
XF86AudioMute
    amixer -q set Master toggle

# Track Control
XF86Audio{Play,Prev,Next}

    ;playerctl {play-pause, previous, next} -p $MUSIC_PLAYER & ;\
    sleep 0.15;\
    playerctl-notifications.sh &

# Get focused window class name via dunst notification
#super + alt + t
#   dunstify "Focused Window" "Name: "$(xprop -id $(bspc query -N -n) | grep -m 1 "WM_CLASS" | sed -n 's/\(WM_CLASS.*\)"\(.*\)"$/\2 /p')
# I could not get this to work with gawk when running it via sxhkd. Works fine elsewhere.
# But atleast I don't get quotation marks when using sed
#    dunstify "Focused Window" "Name: "$(xprop -id $(bspc query -N -n) | gawk '/WM_CLASS/ {print $4}')


#
# bspwm hotkeys
#

# Quit/Restart bspwm
super + ctrl + {q,r}
    bspc {quit,wm -r}

# Close and kill a window
super + {_,shift + } w
    bspc node -{c,k}

# Alternate between the tiled and monocle layout
super + m
    bspc desktop -l next

# Send the newest marked node to the newest preselected node
#super + y
#   bspc node newest.marked.local -n newest.!automatic.local

#
# state/flags
#

# Set the window state
super + {p,shift + p ,shift + f,f}
    bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# Set the node flags
#super + ctrl + {m,x,y,z}
#   bspc node -g {marked,locked,sticky,private}

#
# Focus/Swap
#

# Focus the node in the given direction
super + {_,shift +}{h,n,e,i}
    bspc node -{f,s} {west,south,north,east}

# Focus the node for the given path jump
#super + {p,b,comma,period}
#   bspc node -f @{parent,brother,first,second}

# focus the next/prvious desktop in the current monitor
#super + bracket{left,right}
#   bspc desktop -f {prev,next}.local

# Focus the last node/desktop
#super + {grave,Tab}
#   bspc {node,desktop} -f last

# Focus the older or newer node in the focus history
#super + {o,apostrophe}
#   bspc wm -h off; \
#   bspc node {older,newer} -f; \
#   bspc wm -h on;

# Focus or send to the given desktop
super + {_,shift + }{1-9,0}
    bspc {desktop -f, node -d} '^{1-9,10}'

#
# Preselect
#

# Preselect the direction
super + shift + {r,s,t,d}
    bspc node -p {west,south,north,east}

# Preselect the ratio
#super + ctrl + {1-9}
#   bspc node -0.{1-9}

# Cancel the preselection for the focused node
#super + ctrl + shift + space
#   bspc node -p cancel

# Cancel the preseletion for the focused desktop
super + Escape
    bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# Move / Resize
#

#smart resize
super + {r,s,t,d}
    n=10; \
    { d1=left;   d2=right;  dx=-$n; dy=0;   \
    , d1=bottom; d2=top;    dx=0;   dy=$n;  \
    , d1=top;    d2=bottom; dx=0;   dy=-$n; \
    , d1=right;  d2=left;   dx=$n;  dy=0;   \
    } \
    bspc node --resize $d1 $dx $dy || bspc node --resize $d2 $dx $dy

# Contract a window by moving one of its side inward
super + alt + {r,s,t,d}
    bspc node -z {right -20 0, top 0 20, bottom 0 -20, left 20 0}

# move a floating window
super + alt + {h,n,e,i}
    bspc node -v {-20 0,0 20,0 -20,20 0}

# resize gaps
super + {minus,equal}
    bspc config window_gap $(expr $(bspc config window_gap) {-,+} 1)
